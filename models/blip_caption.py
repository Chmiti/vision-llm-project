import torch
from PIL import Image
from transformers import BlipProcessor, BlipForConditionalGeneration
import gradio as gr

# Chargement mod√®le
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base").to(device)

# Fonction principale
def caption_pipeline(image):
    image = image.convert("RGB")
    inputs = processor(images=image, return_tensors="pt").to(device)
    output = model.generate(**inputs)
    caption = processor.decode(output[0], skip_special_tokens=True)
    return caption

# Interface Gradio
iface = gr.Interface(
    fn=caption_pipeline,
    inputs=gr.Image(type="pil", label="Upload road sign image"),
    outputs=gr.Textbox(label="Generated Caption"),
    title="üõ£Ô∏è Road Sign Caption Generator",
    description="Upload a road sign image and get a caption generated by BLIP."
)

if __name__ == "__main__":
    iface.launch()
